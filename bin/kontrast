#!/usr/bin/env ruby

#######################################
# This is the entry point to Kontrast #
#######################################

begin
    require "rubygems"
    require "kontrast"
rescue LoadError => e
    puts "Could not load Kontrast."
    raise e
end
require "thor"

module Kontrast
    class CLI < Thor
        class_option :config

        desc "run_tests", "Run Kontrast test suite"
        def run_tests
            load_config(options[:config])
            Kontrast.run
        end

        desc "make_gallery --result-path PATH", "Create gallery given a path of test results"
        option :result_path
        def make_gallery
            load_config(options[:config])

            # We're only allowed to give no path in the remote case
            if options[:result_path].nil? && !Kontrast.configuration.run_parallel
                raise GalleryException.new("You can't omit --result-path when running in local mode.")
            end

            Kontrast.make_gallery(options[:result_path])
        end

        # todo: option to specify an output path
        desc "local_run", "Run Kontrast locally"
        def local_run
            load_config(options[:config])

            # Run Kontrast
            Kontrast.run
            Kontrast.make_gallery(Kontrast.path)

            # Print the gallery path
            puts "Kontrast is all done!"
            puts "You can find the gallery at: #{Kontrast.path}/gallery/gallery.html"
        end

        private
            def load_config(config)
                # Let's check if we're within Rails.
                if !Kontrast.in_rails?
                    begin
                        require config
                    rescue LoadError => e
                        raise ConfigurationException.new("Could not load '#{config}'.")
                    rescue Exception => e
                        raise ConfigurationException.new("An unexpected error occurred while trying to load the given config file: #{e.inspect}")
                    end
                else
                    # Load Rails environment
                    # We will assume the config was loaded from an initializer
                    require './config/environment'
                end

                # Check that we actually got a configuration block
                if !Kontrast.configuration
                    raise ConfigurationException.new("No configuration has been loaded.")
                end

                # Make sure we have the bare minimum configuration to continue
                Kontrast.configuration.validate

                return true
            end
    end
end

Kontrast::CLI.start(ARGV)
